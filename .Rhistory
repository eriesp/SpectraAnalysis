n2 <- length(i2)
n3 <- length(i3)
n  <- n1+n2+n3
g  <- length(levels(species.name))
p  <- 4
fit <- manova(as.matrix(iris4) ~ species.name)
summary.manova(fit,test="Wilks")
T0 <- -summary.manova(fit,test="Wilks")$stats[1,2]
T0
set.seed(seed)
T_stat <- numeric(B)
for(perm in 1:B){
# choose random permutation
permutation <- sample(1:n)
species.name.perm <- species.name[permutation]
fit.perm <- manova(as.matrix(iris4) ~ species.name.perm)
T_stat[perm] <- -summary.manova(fit.perm,test="Wilks")$stats[1,2]
}
hist(T_stat,xlim=range(c(T_stat,T0)),breaks=30)
abline(v=T0,col=3,lwd=2)
plot(ecdf(T_stat),xlim=c(-2,1))
abline(v=T0,col=3,lwd=4)
# p-value
p_val <- sum(T_stat>=T0)/B
p_val
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::install_cmdstan()
check_cmdstan_toolchain(fix = TRUE)
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE)
cmdstanr::install_cmdstan()
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::install_cmdstan()
library(rjags)
library(coda)
# for plots
library(ggplot2)
library(tidyr)
library(dplyr)
library(purrr)
library(ggsci)
require(gplots)
require(ggpubr)
scatterplotMatrix(data.frame(alcali.emis,emis.CF,emis.CFval,emis.TF,emis.TFval,emis.der.l2norm,temp.emis))
library(readxl)
library(car)
library(ISLR2)
library(mgcv)
library(rgl)
library(splines)
library(pbapply)
srp <- read_excel("Dataset/Srp_Emissivity.xlsx")
head(srp)
summary(srp)
vul <- read_excel("Dataset/Vulcano_Emissivity.xlsx")
head(vul)
summary(vul)
srp2 <- read_excel("Dataset/Srp_Reflectance.xlsx")
head(srp2)
summary(srp2)
vul2 <- read_excel("Dataset/Vulcano_Reflectance.xlsx")
head(vul2)
summary(vul2)
setwd("~/UNI/NONPARAMETRIC STATISTICS/Project/CelestialBodies")
srp <- read_excel("Dataset/Srp_Emissivity.xlsx")
head(srp)
summary(srp)
vul <- read_excel("Dataset/Vulcano_Emissivity.xlsx")
head(vul)
summary(vul)
srp2 <- read_excel("Dataset/Srp_Reflectance.xlsx")
head(srp2)
summary(srp2)
vul2 <- read_excel("Dataset/Vulcano_Reflectance.xlsx")
head(vul2)
summary(vul2)
srp.emis=srp[713:1, -1] # remove B600, FROM OUTLIER DETECTION (FUNCTIONAL BOXPLOT)
srp.refl=srp2[, -1]
vul.emis=vul[713:1,-1]
vul.refl=vul2[,-1]
emis=cbind(srp.emis,vul.emis)
refl=cbind(srp.refl, vul.refl)
emis.x=srp[713:1,1]$`Wavelength (micron)`
refl.x=srp2[,1]$wl
x11()
par(mfrow=c(2,2))
matplot(emis.x, srp.emis, type='l')
matplot(emis.x, vul.emis, type='l')
matplot(refl.x, srp.refl, type='l')
matplot(refl.x, vul.refl, type='l')
x11()
par(mfrow=c(1,2))
matplot(emis.x, emis, type='l')
matplot(refl.x, refl, type='l')
dim(emis)
n.emis = dim(emis)[2]
emis.CF=numeric(n.emis)
emis.CFval=numeric(n.emis)
emis.TF=numeric(n.emis)
emis.TFval=numeric(n.emis)
emis.last=numeric(n.emis)
for(i in 1:n.emis) {
emis.CF[i]=which.max(unlist(emis[213:518,i])) + 213
emis.CFval[i]=emis[emis.CF[i],i]
emis.CF[i]=emis.x[emis.CF[i]]
emis.TF[i]=which.min(unlist(emis[413:523,i])) + 413
emis.TFval[i]=emis[emis.TF[i],i]
emis.TF[i]=emis.x[emis.TF[i]]
emis.last[i]=emis[713,i]
}
srp.emis.CF=numeric(23)
srp.emis.CFval=numeric(23)
srp.emis.TF=numeric(23)
srp.emis.TFval=numeric(23)
srp.emis.last=numeric(23)
for(i in 1:23) {
srp.emis.CF[i]=which.max(unlist(srp.emis[213:518,i])) + 213
srp.emis.CFval[i]=srp.emis[srp.emis.CF[i],i]
srp.emis.CF[i]=emis.x[srp.emis.CF[i]]
srp.emis.TF[i]=which.min(unlist(srp.emis[413:523,i])) + 413
srp.emis.TFval[i]=srp.emis[srp.emis.TF[i],i]
srp.emis.TF[i]=emis.x[srp.emis.TF[i]]
srp.emis.last[i]=srp.emis[713,i]
}
vul.emis.CF=numeric(20)
vul.emis.CFval=numeric(20)
vul.emis.TF=numeric(20)
vul.emis.TFval=numeric(20)
vul.emis.last=numeric(20)
for(i in 1:20) {
vul.emis.CF[i]=which.max(unlist(vul.emis[213:518,i])) + 213
vul.emis.CFval[i]=vul.emis[vul.emis.CF[i],i]
vul.emis.CF[i]=emis.x[vul.emis.CF[i]]
vul.emis.TF[i]=which.min(unlist(vul.emis[413:523,i])) + 413
vul.emis.TFval[i]=vul.emis[vul.emis.TF[i],i]
vul.emis.TF[i]=emis.x[vul.emis.TF[i]]
vul.emis.last[i]=vul.emis[713,i]
}
refl.CF=numeric(22)
refl.CFval=numeric(22)
refl.TF=numeric(22)
refl.TFval=numeric(22)
refl.last=numeric(22)
for(i in 1:22) {
refl.CF[i]=which.max(unlist(refl[213:518,i])) + 213
refl.CFval[i]=refl[refl.CF[i],i]
refl.CF[i]=refl.x[refl.CF[i]]
refl.TF[i]=which.min(unlist(refl[413:550,i])) + 413
refl.TFval[i]=refl[refl.TF[i],i]
refl.TF[i]=refl.x[refl.TF[i]]
refl.last[i]=refl[714,i]
}
srp.refl.CF=numeric(12)
srp.refl.CFval=numeric(12)
srp.refl.TF=numeric(12)
srp.refl.TFval=numeric(12)
srp.refl.last=numeric(12)
for(i in 1:12) {
srp.refl.CF[i]=which.max(unlist(srp.refl[213:518,i])) + 213
srp.refl.CFval[i]=srp.refl[srp.refl.CF[i],i]
srp.refl.CF[i]=refl.x[srp.refl.CF[i]]
srp.refl.TF[i]=which.min(unlist(srp.refl[413:550,i])) + 413
srp.refl.TFval[i]=srp.refl[srp.refl.TF[i],i]
srp.refl.TF[i]=refl.x[srp.refl.TF[i]]
srp.refl.last[i]=srp.refl[714,i]
}
vul.refl.CF=numeric(10)
vul.refl.CFval=numeric(10)
vul.refl.TF=numeric(10)
vul.refl.TFval=numeric(10)
vul.refl.last=numeric(10)
for(i in 1:10) {
vul.refl.CF[i]=which.max(unlist(vul.refl[213:518,i])) + 213
vul.refl.CFval[i]=vul.refl[vul.refl.CF[i],i]
vul.refl.CF[i]=refl.x[vul.refl.CF[i]]
vul.refl.TF[i]=which.min(unlist(vul.refl[413:550,i])) + 413
vul.refl.TFval[i]=vul.refl[vul.refl.TF[i],i]
vul.refl.TF[i]=refl.x[vul.refl.TF[i]]
vul.refl.last[i]=vul.refl[714,i]
}
temp.emis.srp = c(rep(150,6), rep(300,6), rep(450,6), rep(600,5))
temp.emis.vul = c(rep(150,5), rep(300,5), rep(450,5), rep(600,5))
temp.emis = c(temp.emis.srp, temp.emis.vul)
temp.refl.srp = rep(c(20,500), 6)
temp.refl.vul = rep(c(20,500), 5)
temp.refl = c(temp.refl.srp, temp.refl.vul)
dummy.srp.emis=numeric(23)
dummy.srp.emis[19:23]=1
dummy.vul.emis=numeric(20)
dummy.vul.emis[16:20]=1
dummy.srp.refl=numeric(12)
dummy.srp.refl[seq(2,12,2)]=1
dummy.vul.refl=numeric(10)
dummy.vul.refl[seq(2,10,2)]=1
dummy.emis=c(dummy.srp.emis, dummy.vul.emis)
dummy.refl=c(dummy.srp.refl, dummy.vul.refl)
silica.srp = c(72.28, 67.47, 62.64, 57.07, 53.03, 48.03)
silica.vul = c(53.33, 59.66, 64.08, 67.96, 73.96)
silica.srp.emis = rep(silica.srp,4)[-24]
silica.vul.emis = rep(silica.vul,4)
silica.srp.refl = c(72.28, 72.28, 67.47, 67.47, 62.64, 62.64, 57.07, 57.07, 53.03, 53.03, 48.03, 48.03)
silica.vul.refl = c(53.33, 53.33, 59.66, 59.66, 64.08, 64.08, 67.96, 67.96, 73.96, 73.96)
silica.emis=c(silica.srp.emis, silica.vul.emis)
silica.refl=c(silica.srp.refl, silica.vul.refl)
alcali.srp = c(7.51, 6.62, 5.72, 4.78, 3.72, 2.71)
alcali.vul = c(8.12, 8.40, 8.47, 8.45, 8.75)
alcali.srp.emis = rep(alcali.srp,4)[-24]
alcali.vul.emis = rep(alcali.vul,4)
alcali.srp.refl = c(7.51, 7.51, 6.62, 6.62, 5.72, 5.72, 4.78, 4.78, 3.72, 3.72, 2.71, 2.71)
alcali.vul.refl = c(8.12, 8.12, 8.40, 8.40, 8.47, 8.47, 8.45, 8.45, 8.75, 8.75)
alcali.emis=c(alcali.srp.emis, alcali.vul.emis)
alcali.refl=c(alcali.srp.refl, alcali.vul.refl)
length(alcali.emis)
silica.srp = c(72.28, 67.47, 62.64, 57.07, 53.03, 48.03)
silica.vul = c(53.33, 59.66, 64.08, 67.96, 73.96)
silica.srp.emis = rep(silica.srp,4)
silica.vul.emis = rep(silica.vul,4)
silica.srp.refl = c(72.28, 72.28, 67.47, 67.47, 62.64, 62.64, 57.07, 57.07, 53.03, 53.03, 48.03, 48.03)
silica.vul.refl = c(53.33, 53.33, 59.66, 59.66, 64.08, 64.08, 67.96, 67.96, 73.96, 73.96)
silica.emis=c(silica.srp.emis, silica.vul.emis)
silica.refl=c(silica.srp.refl, silica.vul.refl)
alcali.srp = c(7.51, 6.62, 5.72, 4.78, 3.72, 2.71)
alcali.vul = c(8.12, 8.40, 8.47, 8.45, 8.75)
alcali.srp.emis = rep(alcali.srp,4)
alcali.vul.emis = rep(alcali.vul,4)
alcali.srp.refl = c(7.51, 7.51, 6.62, 6.62, 5.72, 5.72, 4.78, 4.78, 3.72, 3.72, 2.71, 2.71)
alcali.vul.refl = c(8.12, 8.12, 8.40, 8.40, 8.47, 8.47, 8.45, 8.45, 8.75, 8.75)
alcali.emis=c(alcali.srp.emis, alcali.vul.emis)
alcali.refl=c(alcali.srp.refl, alcali.vul.refl)
length(alcali.emis)
x11()
plot(silica.emis, alcali.emis)
points(silica.srp, alcali.srp, col='red', pch=19)
points(silica.vul, alcali.vul, col='blue', pch=19)
emis.der.l2norm = numeric(44)
for (i in 1:44){
emis.der.l2norm[i] = norm(emis.der1[i,], type = '2')
}
par(mfrow=c(1,1))
matplot(emis.x,emis.der1[,c(1,44)], type = 'l')
plot(emis.der.l2norm,tupe='l')
plot(emis.der.l2norm, silica.emis)
plot(emis.der.l2norm, alcali.emis)
library(fda)
m=5
nbasis=25
basis <- create.bspline.basis(c(emis.x[1],emis.x[length(emis.x)]), nbasis, m)
basismat <- eval.basis(emis.x, basis)
basismat1<- eval.basis(emis.x, basis, Lfdobj=1)
basismat2<- eval.basis(emis.x, basis, Lfdobj=2)
emis.smooth <- basismat %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
emis.der1 <- basismat1 %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
emis.der2 <- basismat2 %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
data_emis=data.frame(srp.fda, vul.fda)
data_refl=data.frame(srp2.fda, vul2.fda)
srp.fda=srp[417:1, -c(1)]
srp2.fda=srp2[298:714, -1]
vul.fda=vul[417:1,-1]
vul2.fda=vul2[298:714,-1]
emis.x=srp[417:1,1]$`Wavelength (micron)`
refl.x=srp2[298:714,1]$wl # si puÃ² tagliare ancora un pochino volendo
data_emis=data.frame(srp.fda, vul.fda)
data_refl=data.frame(srp2.fda, vul2.fda)
m=5
nbasis=25
basis <- create.bspline.basis(c(emis.x[1],emis.x[length(emis.x)]), nbasis, m)
basismat <- eval.basis(emis.x, basis)
basismat1<- eval.basis(emis.x, basis, Lfdobj=1)
basismat2<- eval.basis(emis.x, basis, Lfdobj=2)
emis.smooth <- basismat %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
emis.der1 <- basismat1 %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
emis.der2 <- basismat2 %*% lsfit(basismat, data_emis, intercept=FALSE)$coef
par(mfrow=c(2,2))
matplot(emis.x,data_emis,xlab="t",ylab="observed data", type='l')
matplot(emis.x,emis.smooth ,type="l",lwd=1)
matplot(emis.x,emis.der1 ,type="l",lwd=1)
matplot(emis.x,emis.der2 ,type="l",lwd=1)
find_knots <- function(n,assex){
nodes1 <- seq(from = assex[1], to = assex[334],length.out = n*3/4)
nodes2 <- seq(from = assex[334], to = assex[length(assex)], length.out = n*1/4)
nodes2 <- nodes2[2:length(nodes2)]
return(c(nodes1,nodes2))
}
n.opt.knots=24
nodi <- find_knots(n = n.opt.knots, assex = refl.x)
basis <- create.bspline.basis(c(refl.x[1],refl.x[length(refl.x)]), breaks = nodi, norder = m)
basismat <- smooth.basis(argvals=refl.x, y=as.matrix(data_refl), fdParobj=basis)
refl.smooth <- eval.fd(refl.x, basismat$fd)
# first derivative
refl.der1 <- eval.fd(refl.x, basismat$fd, Lfd=1)
# second derivative
refl.der2 <- eval.fd(refl.x, basismat$fd, Lfd=2)
emis.der.l2norm = numeric(44)
for (i in 1:44){
emis.der.l2norm[i] = norm(emis.der1[i,], type = '2')
}
par(mfrow=c(1,1))
matplot(emis.x,emis.der1[,c(1,44)], type = 'l')
plot(emis.der.l2norm,tupe='l')
plot(emis.der.l2norm, silica.emis)
plot(emis.der.l2norm, alcali.emis)
n.refl = dim(data_refl)[2]
refl.der.l2norm = numeric(n.refl)
for (i in 1:n.refl){
refl.der.l2norm[i] = norm(refl.der1[i,], type = '2')
}
scatterplotMatrix(data.frame(silica.emis,emis.CF,emis.CFval,emis.TF,emis.TFval,emis.der.l2norm))
scatterplotMatrix(data.frame(alcali.emis,emis.CF,emis.CFval,emis.TF,emis.TFval,emis.der.l2norm,temp.emis))
length(alcali.emis)
length(emis.CF)
length(emis.CFval)
length(emis.TF)
length(emis.TFval)
length(emis.der.l2norm)
scatterplotMatrix(data.frame(alcali.emis,emis.CF,emis.CFval,emis.TF,emis.TFval,emis.der.l2norm))
silica.refl.gam = gam(silica.refl ~ refl.CF + s(refl.TFval, bs='cr') + refl.TF +
I(refl.TF^2) + s(refl.der.l2norm, bs = 'cr'))
summary(silica.refl.gam)
silica.refl.gam.reduced = gam(silica.refl ~ refl.CF + refl.TFval + s(refl.der.l2norm, bs = 'cr') )
summary(silica.refl.gam.reduced)
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
srp <- read_excel("Dataset/Srp_Emissivity.xlsx")
head(srp)
View(srp)
summary(srp)
vul <- read_excel("Dataset/Vulcano_Emissivity.xlsx")
head(vul)
View(vul)
summary(vul)
srp2 <- read_excel("Dataset/Srp_Reflectance.xlsx")
head(srp2)
View(srp2)
summary(srp2)
vul2 <- read_excel("Dataset/Vulcano_Reflectance.xlsx")
head(vul2)
View(vul2)
summary(vul2)
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
# Very important color initialization
library("RColorBrewer")
display.brewer.all()
# Import the datasets
library(readxl)
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
X11()
par(mfrow=c(2,2))
matplot(srp[,1], srp[,c(2,3,4,5,6,7)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='150Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(8,9,10,11,12,13)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='300Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(14,15,16,17,18,19)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='450Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(20,21,22,23,24,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='600Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
X11()
par(mfrow=c(2,3))
matplot(vul[,1], vul[,c(2,7,12,17)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='S Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(vul[,1], vul[,c(3,8,13,18)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='S7 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(vul[,1], vul[,c(4,9,14,19)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='S5 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(vul[,1], vul[,c(5,10,15,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='S3 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(vul[,1], vul[,c(6,11,16,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RS Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
X11()
par(mfrow=c(2,2))
matplot(vul[,1], vul[,c(2,3,4,5,6)], type='l', lty=1, lwd=2, col=brewer.pal(n=5,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='150Â°')
legend('bottomright', legend=c('S','S7','S5','S3','RS'), lty=1, col=brewer.pal(n=5,name='BrBG'))
matplot(vul[,1], vul[,c(7,8,9,10,11)], type='l', lty=1, lwd=2, col=brewer.pal(n=5,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='300Â°')
legend('bottomright', legend=c('S','S7','S5','S3','RS'), lty=1, col=brewer.pal(n=5,name='BrBG'))
matplot(vul[,1], vul[,c(12,13,14,15,16)], type='l', lty=1, lwd=2, col=brewer.pal(n=5,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='450Â°')
legend('bottomright', legend=c('S','S7','S5','S3','RS'), lty=1, col=brewer.pal(n=5,name='BrBG'))
matplot(vul[,1], vul[,c(17,18,19,20,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=5,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='600Â°')
legend('bottomright', legend=c('S','S7','S5','S3','RS'), lty=1, col=brewer.pal(n=5,name='BrBG'))
X11()
par(mfrow=c(2,2))
matplot(srp[,1], srp[,c(2,3,4,5,6,7)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='150Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(8,9,10,11,12,13)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='300Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(14,15,16,17,18,19)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='450Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
matplot(srp[,1], srp[,c(20,21,22,23,24,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='600Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
x11()
par(mfrow=c(1,1))
matplot(srp[,1], srp[,c(20,21,22,23,24,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'), xlab='Wavelength (micron)', ylab='emissivity', main='600Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
srp[,1]
x11()
par(mfrow=c(1,1))
matplot(srp[,1], srp[,c(20,21,22,23,24,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'),
xlab='Wavelength (micron)', ylab='emissivity', main='Emissivity - 600Â°')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
x11()
par(mfrow=c(1,1))
matplot(srp[,1], srp[,c(20,21,22,23,24,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=6,name='BrBG'),
xlab='Wavelength (micron)', ylab='emissivity', main='Emissivity - 600Â°C')
legend('bottomright', legend=c('RB','B2','B4','B6','B8','B'), lty=1, col=brewer.pal(n=6,name='BrBG'))
f_data_emis = fData(emis.x, t(data_emis))
x11()
invisible(fbplot(f_data_emis, main="Magnitude outliers")) ### FUNCTIONAL BOXPLOT
invisible(outliergram(f_data_emis))                       ### OUTLIERGRAM
outliers=fbplot(f_data_emis)
outliers$ID_outliers
f_data_emis = fData(emis.x, t(data_emis))
library(fda)
f_data_emis = fData(emis.x, t(data_emis))
# Import the datasets
library(readxl)
library(fda)
library(KernSmooth)
library(fields)
library(fdakma)
library(roahd)
f_data_emis = fData(emis.x, t(data_emis))
x11()
invisible(fbplot(f_data_emis, main="Magnitude outliers")) ### FUNCTIONAL BOXPLOT
invisible(outliergram(f_data_emis))                       ### OUTLIERGRAM
x11()
invisible(fbplot(f_data_emis, main="Magnitude outliers"))
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
display.brewer.all()
brewer.pal(n=4,name='YlOrRd')
brewer.pal(n=4,name='YlOrRd')[4:1]
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='YlOrRd'), xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
x11()
display.brewer.all()
brewer.pal(n=4,name='Spectral')
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='YlOrRd'))
X11()
par(mfrow=c(2,3))
matplot(srp[,1], srp[,c(2,8,14,20)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='RB Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
matplot(srp[,1], srp[,c(3,9,15,21)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='B2 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
matplot(srp[,1], srp[,c(4,10,16,22)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='B4 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
matplot(srp[,1], srp[,c(5,11,17,23)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='B6 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
matplot(srp[,1], srp[,c(6,12,18,24)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='B8 Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
matplot(srp[,1], srp[,c(7,3,19,25)], type='l', lty=1, lwd=2, col=brewer.pal(n=4,name='Spectral')[4:1], xlab='Wavelength (micron)', ylab='emissivity', main='B Blend')
legend('bottomright', legend=c('150','300','450','600'), lty=1, col=brewer.pal(n=4,name='Spectral')[4:1])
